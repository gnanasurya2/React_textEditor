{"version":3,"sources":["useKeyboardShortcut.js","editor.js","App.js","serviceWorker.js","index.js"],"names":["blacklistedTargets","keysReducer","state","action","type","key","useKeyboardShortcut","shortcutKeys","callback","Array","isArray","Error","length","initalKeyMapping","reduce","currentKeys","toLowerCase","useReducer","keys","setKeys","keydownListener","useCallback","keydownEvent","target","repeat","loweredKey","includes","tagName","undefined","keyupListener","keyupEvent","useEffect","Object","values","filter","value","window","addEventListener","removeEventListener","Wrapper","styled","div","Title","h1","Author","h3","Content","Editor","props","title","useRef","author","download","content","document","execCommand","format","com","val","current","focus","setHeader","id","insertList","data","getSelection","dataExtractor","nodes","final","ele","childNodes","nodeName","push","localName","innerHTML","split","contentEditable","data-placeholder","ref","onClick","finalData","dataStr","encodeURIComponent","JSON","stringify","aEle","setAttribute","click","console","log","submit","style","display","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8916396c.chunk.js","sourcesContent":["import { useEffect, useCallback, useReducer } from \"react\";\n\nconst blacklistedTargets = [\"INPUT\", \"TEXTAREA\"];\n\nconst keysReducer = (state, action) => {\n  switch (action.type) {\n    case \"set-key-down\":\n      return { ...state, [action.key]: true };\n    case \"set-key-up\":\n      return { ...state, [action.key]: false };\n    default:\n      return state;\n  }\n};\n\nconst useKeyboardShortcut = (shortcutKeys, callback) => {\n  if (!Array.isArray(shortcutKeys))\n    throw new Error(\n      \"The first parameter to `useKeyboardShortcut` must be an ordered array of `KeyboardEvent.key` strings.\"\n    );\n\n  if (!shortcutKeys.length)\n    throw new Error(\n      \"The first parameter to `useKeyboardShortcut` must contain atleast one `KeyboardEvent.key` string.\"\n    );\n\n  if (!callback || typeof callback !== \"function\")\n    throw new Error(\n      \"The second parameter to `useKeyboardShortcut` must be a function that will be envoked when the keys are pressed.\"\n    );\n\n  const initalKeyMapping = shortcutKeys.reduce((currentKeys, key) => {\n    currentKeys[key.toLowerCase()] = false;\n    return currentKeys;\n  }, {});\n  const [keys, setKeys] = useReducer(keysReducer, initalKeyMapping);\n\n  const keydownListener = useCallback(\n    (keydownEvent) => {\n      const { key, target, repeat } = keydownEvent;\n      const loweredKey = key.toLowerCase();\n      if (repeat) return;\n      if (blacklistedTargets.includes(target.tagName)) return;\n      if (keys[loweredKey] === undefined) return;\n\n      if (keys[loweredKey] === false)\n        setKeys({ type: \"set-key-down\", key: loweredKey });\n    },\n    [keys]\n  );\n\n  const keyupListener = useCallback(\n    (keyupEvent) => {\n      const { key, target } = keyupEvent;\n      const loweredKey = key.toLowerCase();\n\n      if (blacklistedTargets.includes(target.tagName)) return;\n      if (keys[loweredKey] === undefined) return;\n\n      if (keys[loweredKey] === true)\n        setKeys({ type: \"set-key-up\", key: loweredKey });\n    },\n    [keys]\n  );\n\n  useEffect(() => {\n    if (!Object.values(keys).filter((value) => !value).length) callback(keys);\n  }, [callback, keys]);\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", keydownListener, true);\n    return () => window.removeEventListener(\"keydown\", keydownListener, true);\n  }, [keydownListener]);\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", keyupListener, true);\n    return () => window.removeEventListener(\"keyup\", keyupListener, true);\n  }, [keyupListener]);\n};\n\nexport default useKeyboardShortcut;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useKeyboardShortcut from \"./useKeyboardShortcut\";\n\nconst Wrapper = styled.div`\n  width: 100vw;\n  box-sizing: border-box;\n  min-height: 100vh;\n  padding: 60px 5% 2.5%;\n`;\nconst Title = styled.h1`\n  font-size: 44px;\n  line-height: 48px;\n  margin: 10px 0px;\n  &:empty:before {\n    content: attr(data-placeholder);\n    color: gray;\n  }\n  outline: none;\n`;\n\nconst Author = styled.h3`\n  font-size: 20px;\n  color: rgba(0, 0, 0, 0.7);\n  &:before {\n    content: \"Written by \";\n  }\n  outline: none;\n`;\n\nconst Content = styled.div`\n  &:empty:before {\n    content: attr(data-placeholder);\n    color: gray;\n  }\n  outline: none;\n`;\nconst Editor = (props) => {\n  const title = useRef();\n  const author = useRef();\n  const download = useRef();\n  const content = useRef();\n  useEffect(() => {\n    document.execCommand(\"defaultParagraphSeparator\", false, \"p\");\n  }, []);\n  const format = (com, val) => {\n    document.execCommand(com, false, val);\n    content.current.focus();\n  };\n  const setHeader = (id) => {\n    format(\"formatblock\", `h${id}`);\n  };\n  const insertList = () => {\n    const data = document.getSelection();\n    format(\"insertUnorderedList\", data);\n  };\n  useKeyboardShortcut([\"control\", \"alt\", \"z\"], () => setHeader(2));\n  useKeyboardShortcut([\"control\", \"alt\", \"x\"], () => setHeader(3));\n  useKeyboardShortcut([\"control\", \"alt\", \"c\"], () => setHeader(4));\n  useKeyboardShortcut([\"control\", \"alt\", \"v\"], () => insertList());\n  const dataExtractor = (nodes, final) => {\n    for (let ele of nodes) {\n      if (ele.childNodes[0]) {\n        if (ele.childNodes[0].nodeName === \"BR\") {\n          return;\n        } else {\n          if (ele.childNodes[0].nodeName === \"#text\") {\n            final.push({\n              type: ele.localName,\n              content: ele.innerHTML.split(\"<br>\")[0],\n            });\n            // console.log(final);\n          } else {\n            dataExtractor(ele.childNodes, final);\n          }\n        }\n      }\n    }\n    return final;\n  };\n  const submit = () => {\n    const finalData = {\n      title: title.current.innerHTML,\n      author: author.current.innerHTML,\n      content: dataExtractor(content.current.childNodes, []),\n    };\n    let dataStr =\n      \"data:text/json;charset=utf-8,\" +\n      encodeURIComponent(JSON.stringify(finalData));\n    let aEle = download.current;\n    aEle.setAttribute(\"href\", dataStr);\n    aEle.setAttribute(\"download\", \"blog.json\");\n    aEle.click();\n    console.log(finalData);\n  };\n  return (\n    <Wrapper>\n      <Title\n        id=\"title\"\n        contentEditable=\"true\"\n        data-placeholder=\"Title\"\n        ref={title}\n      ></Title>\n      <Author contentEditable=\"true\" ref={author}></Author>\n      <button onClick={() => setHeader(2)}>h2</button>\n      <button onClick={() => setHeader(3)}>h3</button>\n      <button onClick={() => setHeader(4)}>h4</button>\n      <button onClick={() => insertList()}>list</button>\n      <button onClick={() => submit()}>Submit</button>\n      <a ref={download} style={{ display: \"none\" }}></a>\n      <Content\n        contentEditable\n        data-placeholder=\"Content\"\n        ref={content}\n      ></Content>\n    </Wrapper>\n  );\n};\n\nexport default Editor;\n","import React from \"react\";\nimport Editor from \"./editor\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <div>\n      <Editor />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}